import collections

class KMerTokenizer:
    def __init__(self, initial_vocab=None):
        self.initial_vocab = initial_vocab if initial_vocab is not None else set()
        self.vocab = self.initial_vocab
        self.token_to_id = {token: i for i, token in enumerate(self.vocab)}
        self.id_to_token = {i: token for token, i in self.token_to_id.items()}

    def tokenize_sequence(self, sequence, k):
        kmers_list = [sequence[i:i+k] for i in range(0, len(sequence), k)]
        return kmers_list

    def train_tokenizer(self, corpus, k, num_merges):
        token_counts = collections.Counter()
        for sequence in corpus:
            kmers_list = self.tokenize_sequence(sequence, k)
            token_counts.update(kmers_list)

        for merge in range(num_merges):
            pair_counts = collections.defaultdict(int)
            for token, count in token_counts.items():
                sub_tokens = [token[i:i+2] for i in range(len(token) - 1)]
                for pair in sub_tokens:
                    pair_counts[pair] += count

            if not pair_counts:
                break

            most_common_pair, _ = max(pair_counts.items(), key=lambda x: x[1])
            new_token = ''.join(most_common_pair)
            print(new_token)
            self.vocab.append(new_token)
            del token_counts[most_common_pair]
            token_counts[new_token] = pair_counts[most_common_pair]
            self._update_token_mappings()

    def _update_token_mappings(self):
        self.token_to_id = {token: i for i, token in enumerate(self.vocab)}
        self.id_to_token = {i: token for token, i in self.token_to_id.items()}
    
    def encode_sequence(self, sequence):
        encoded_sequence = []
        i = 0
        while i < len(sequence):
            for k in range(len(sequence), i, -1):
                token = sequence[i:k]
                if token in self.vocab:
                    encoded_sequence.append(self.token_to_id[token])
                    i = k - 1
                    break
            i += 1
        return encoded_sequence

    def decode_sequence(self, encoded_sequence):
        return ''.join([self.id_to_token[i] for i in encoded_sequence])

# Example usage
corpus = """GGGGAAGCAAGGCGGAGTTGGGCAGCTCGTGTTCAATGGGTAGAGTTTCAGGCTGGGGTGATGGAAGGGTGCTGGAAATGAGTGGTAGTGATGGCGGCACAACAGTGTGAATCTACTTAATCCCACTGAACTGTATGCTGAAAAATGGTTTAGACGGTGAATTTTAGGTTATGTATGTTTTACCACAATTTTTAAAAAGCTAGTGAAAAGCTGGTAAAAAGAAAGAAAAGAGGCTTTTTTAAAAAGTTAAATATATAAAAAGAGCATCATCAGTCCAAAGTCCAGCAGTTGTCCCTCCTGGAATCCGTTGGCTTGCCTCCGGCATTTTTGGCCCTTGCCTTTTAGGGTTGCCAGATTAAAAGACAGGATGCCCAGCTAGTTTGAATTTTAGATAAACAACGAATAATTTCGTAGCATAAATATGTCCCAAGCTTAGTTTGGGACATACTTATGCTAAAAAACATTATTGGTTGTTTATCTGAGATTCAGAATTAAGCATTTTATATTTTATTTGCTGCCTCTGGCCACCCTACTCTCTTCCTAACACTCTCTCCCTCTCCCAGTTTTGTCCGCCTTCCCTGCCTCCTCTTCTGGGGGAGTTAGATCGAGTTGTAACAAGAACATGCCACTGTCTCGCTGGCTGCAGCGTGTGGTCCCCTTACCAGAGGTAAAGAAGAGATGGATCTCCACTCATGTTGTAGACAGAATGTTTATGTCCTCTCCAAATGCTTATGTTGAAACCCTAACCCCTAATGTGATGGTATGTGGAGATGGGCCTTTGGTAGGTAATTACGGTTAGATGAGGTCATGGGGTGGGGCCCTCATTATAGATCTGGTAAGAAAAGAGAGCATTGTCTCTGTGTCTCCCTCTCTCTCTCTCTCTCTCTCTCTCATTTCTCTCTATCTCATTTCTCTCTCTCTCGCTATCTCATTTTTCTCTCTCTCTCTTTCTCTCCTCTGTCTTTTCCCACCAAGTGAGGATGCGAAGAGAAGGTGGCTGTCTGCAAACCAGGAAGAGAGCCCTCACCGGGAACCCGTCCAGCTGCCACCTTGAACTTGGACTTCCAAGCCTCCAGAACTGTGAGGGATAAATGTATGATTTTAAAGTCGCCCAGTGTGTGGTATTTTGTTTTGACTAATACAACCTGAAAACATTTTCCCCTCACTCCACCTGAGCAATATCTGAGTGGCTTAAGGTACTCAGGACACAACAAAGGAGAAATGTCCCATGCACAAGGTGCACCCATGCCTGGGTAAAGCAGCCTGGCACAGAGGGAAGCACACAGGCTCAGGGATCTGCTATTCATTCTTTGTGTGACCCTGGGCAAGCCATGAATGGAGCTTCAGTCACCCCATTTGTAATGGGATTTAATTGTGCTTGCCCTGCCTCCTTTTGAGGGCTGTAGAGAAAAGATGTCAAAGTATTTTGTAATCTGGCTGGGCGTGGTGGCTCATGCCTGTAATCCTAGCACTTTGGTAGGCTGACGCGAGAGGACTGCTTGAGCCCAAGAGTTTGAGATCAGCCTGGGCAATATTGTGAGATTCCATCTCTACAAAAATAAAATAAAATAGCCAGTCATGGTGTCACACACCTGTAGTCCCAGCTACATGGGAGGCTGAGGCGGGAGGATCACTTGAGCTTGGGAGATCGAGGCTGCAGTGAGCTATGATTGTACCACTGCACTCCAGGCTGGGCGACAGAGAGAGACCCTGTCTCAGAAAAAAAAAAAAAAGTACTTTGTAATCTGTAAGGTTTATTTCAACACACACAAAAAAAGTGTATATGCTCCACGATGCCTGTGAATATACACACACACCACATCATATACCAAGCCTGGCTGTGTCTTCTCACAAATGCACTGCTAGGCACCACCCCCAGTTCTAGAATCACACCAGCCAGTTCACCCTCCAGATGGTTCACCCTCAACTTCATAAAAGTTCCCTACCTAATCTACTGACAGGCTCATCCCCGACCTAATTTTAAAGATTTCCTAGGAGCTGCAGTGGGAATCCTGGACCTCAGCCTGGACAAAGAACAGCTGCAGGTCATTCTCATGTGTGGACACAGAAGCTCTGCCTGCCTTTGCTGGCCAGCTGGGCTGAGCGGGCCTGGGAATTAAGGCTGCAGGGTTGGTCCCAGGCAGTCTTGCTGAAGCTTGCCACATCCCCCAGCCTCCTGGATTTGCCAGGATCCAAGAGCATGGACTTTAGGAATTCCTGGTGGAGGAGTGAAGAAAATGTGACAGGGTGTCCTAAGCCCCGATCTACAGGAAGAAAACTGGAAATAAGACTGAGGACTTAGTTTAAGATGTTCCTACTCAGCCTCTAGCTTTTGTGCTACAGTTCTGGGAACAGACTCCTCTCTCCTGAAAACCACTTCCCTCCGCAGCATTAGATTTCACCAAGATGTCTTGCTTGTGGGAAAGACTTCCAAGGATGCCTGGAGAGAGGAGGATGGAAATGTCCTGCTCTCTAAACAGATAGACAGATGCAGCCAGACAGAAAATAGTTTATCTTGCTGAGGTTTCTAATGTATTTGAAAGAGGCCTGGGTCTAGAAGTCTACCCAGAGGGCTCTGTGTTGTGCACGCAAAGATAAGAACCTTCCCTGTGGGAGTTCCAGAGCCAGTTTTCATAAACACCCATCGGTGACTGTGTTCAGAGTGAGTTCACACCATCCTGACCTGCCCTGAGTTAGACCTTACATGGTCTTCCTCCTCTAGGAAGCCTCTGCAGCCCAGGAACCTCCCCTTATCGGAAATGAACAGCATTTGAAGCTTCACCAGACAGACCAGACAGCTTAGCCCTCGTGTTGTGCCATGTGGGTTGTTCTCTGAGAGGCAGGAGAGCATAGTGGTTACTAGGAAGGGAAGGACTTTGGGACTAGACTGCCTCGGCTGGAGTCCTCTTTCTGCTTCATAGCCACGTGATCCTAGGCATGTTACCTGTGCCTCAGTTTTCACTCTGTCAATATGTAATAACTGAATCTGTCTTTGTGGTGAGGATTCAGTGAGTTAACATATTTGAAGTGCTTAAAAATGAGGCTTGTGTCCATAGATTAATGAGTGAATACACAAATGGTGATATGGACATACAGTGGAGTATTAGTCATAAAAAGGAAGGCAGAGCTGATCCATGGCACCATGTGACAGAACCTCAAAAGCATTAGGTTAAGTGGAAGAAGCCAGACACAGGTCACCTATTGTGTAATTCCATTTATAGGAAATATACAGAATATGTAAATCCGTGGAGAAAGAAAGCCGATTTCCAGGGGCTAAGGGGAGGGGAGAATGGGAAGTGGCTGCTTCATGGGTACAAGGTTTCATTTTGAGCTGATGAAAATGTTTTGGAACTACATAGAGATAGTGTTGGCACAACATGGTGAATGTACTGAATGCCACTGATTGTTCAATTTAAAATGGTCAAACTTATATGAATTTCACCTCCATTAAAAAAAAAAAAAAAGGACCAGATGTGGTTGCTCACACCCATAATCCCAACACTTTGGAAAAAGGTGAAAGTTTTTTTTTCTTTTTTTTTTTATATACTTAAGTTCTAGGGTACATGTGCATAATGTGCAGGTTGGATACATAGATATGCGTGTGCCATGTTGGTTTGCTGCACCCATCAACTTGTCATTTACATTAGGTATTTCTTCTAATGCTATCCCTCCCCCAGCCCCCCACCCACTGACAGGCCCCAGTGTATGATGTTCTCTGCCCCATGTCCAAGCGTTCTCATTGTTCAATTCCCACCTGTGAGTGAGAACATGCAGTGTTTGGTTTTCTGTCTTTGTGATAGTTTGCTCAGAATGATGGTTTCCAGCTTCATCCATGTCCCTGCAAAGGACATGAACTCATCCTTTTTAATGGCTGCATAGTATCCCATGGTATATATGTGCCACATTCTCTTAATCCAGTCTGTCATTGATGGACATTTGGGTTGGTTCAAAGTCTTTGCTATTGTGAATACTGCCACAATAAACATACATGTGCATGTGTCTTTATAGTAGCACGATTTATAATCCTTTGGGTATATACCCTAAGACCTGGGACGCATTTAAAGCAGTGTGTAAAGAGACATTTATAGCACTAAATGCCCACAAGAGACCTCTGCCTGAGAACGTGGGTTTCAGCCTAAGAGTTGTAATATGTGTGCCCATTCACAGGTGCTGCATCAGAGTCCCAGGTGGGAAGAAGGCAAGCATACACAAAAATGGTAAAAGGCAGAAAGGAGCCCAGTCTCGTTCTTTTTAAGAAGTTTTCCTAAGAATCTCCACCCAGCGACTTGCTCTCACATCTTCTTGGCCAGCACTGGACCACACAACTCCTTCTAGATACAGAGGAGTCCTAGGATTCTATGAGAAAGAAGGGGAGGGTGGGCAAAGGGCAGCCAGCTGTGCAGCATCTGCTGGAGACACCTAACCCTTGGTGGAGGGGTTGTGGTGCTGGGAGAAGGCTTTCTGGACGGTGTGACAGCAGAGATAAACTTAAAGGCCAAGTAGGAGTTACCCTGGTGAAGCAGGGCAGGGTTACAAGCATTCCAGCAACATGAAGCAGCAGGAGTGTTTTAATTAAAAGAAGGCAGTTGCTGTAACCAACTATAAACAAATAAAGGCTTAAACACAATGGAAGTTTATTTCTCACTAAGGGAACATCCAAATCCATGATACTTTAAGTCAGGGACCCAGGTTCCTCCCATCTATGGTTCTGCCATCACTAATCTGGGTCTTCCACAATTGCCGTGCTCCTTGGAGGTGGGAAGAGCAGGCGGAGGACACGTGGGAGGTTTTAGGGACAAGCCTGGAGGCAGCATGCGTCACTCCCATGCAGAGTCCATTGGCCAATGCTGGCTCCGATGGCCACATCTCACTGCAGGGGCAGCTGGGAAATACAGTCTGGCTGTCTACCCAGGAGGAAGAGCAGCCAGTTTCTGCTGCTGATGATCAGGAGGTGGAGAAAATGTTCAGTCAGGCAGGGAGTGGGAATAGACAAGACCACAAGCAGCTTGGTGCCTCTGAAAGGGAGAGGGGTGGAGGGGAGACTAGAGAGGTGGGTAGGAATACTGGATTCCACTGACCACGTGCTGGATGTCACGCTTAGCCCTCCTGCTCTGTGCCGGGTTAGGCACCTGGTGTTTTACGTACATAATCTCAATTCTGTGAGGGCATCCGACCTGTGGGAAAAGAGCTGTTTGTTTCAAATGCCAGTCCTGCTTCCTAACAAGTGTTTAGAGCTTAATCGTGTTCAAAATACATATACAATGTTTAATACTTACAAGAATTTGGTGGGGAAAATATTACCATCTTTCCCTTTTGTGATTGGAGAAAAATGAGGCTTTGAAGGGTTTAAGAACTTGCCCAAGGTCGGCCAGGTGCAGTGGCTCATGTCTATAATCCCAACACTTTGGGAGGCTGAGGTGGGAGGATCGCTTGAGGCCAGGAGTTCAAGACCAGCCTGAGCAACATAGTGAGACTTTGTCTCTATAAAAAATAAATAAATAAATAAAAACAACTTGTCCAAGGTCAGACAGGCAGCCTCTTAGTAAGCACACATATCCTCTATATTATACTACCTCTCATGGAGGATCTCCTGTGTTCTACAAATAGTCTGGACTTGAGCCAGAATGTGTTATAATCCTGGGATCACGGCCAGTGGGCTTAGAAGAAGCCATCTCTTTCTCATGCCAAGATGAGGCTCCCCCAGATTTGCTCAGACTTACCTATAGTCAGCAGCATCGGGGGTCAGGAAAGACTTCACGAAGCCATAAATGCATCCTTCTCGGGGCAGCACCTGGCTCTCCCAGGTGAGAGAGGACTCCATTTTCACAGGCAGGCGTGGGAGCTTCAGCACCCATCTCTGGGCCCAGAATGACCCACTGGAGACCTTACAGCTCTCCTGTCACCCCCAATTCCTGCCCCCTCTGCAGCCTTGGAGGAGAATGGAGCTGAAGGGCCTGCCCTCTGTAGGGTGAGAAAGGGAGGCTAAAGCCTGGTGCCCACTGCCCTGGCTGCTCCGCATTGCAGGAGCTGCGCCCTTCCTTTCCTGGCACAGGGTCCACAGCCCCGAAACCCCGTTGTGTGGGAGCTGGGCACAGGGCAGCAGGACTAATCCTTGGAACAGCTCAGGGAGGATTATCCCAGCCACTGTCAGCAGCGGTGCAGCTGGCTCATTCCCATATAGGGGGAGGCCAGAGCCAGGGTGCCCTGGCTGCTCCGCATTGCAGGAGCTGCGCCCTTCCTTTCCTGGCACAGGGTCCACAGCCCCGAAACCCCGTTGTGTGGGAGCTGGGCACAGGGCAGCAGGACTAATCCTTGGAACAGCTCAGGGAGGATTATCCCAGCCACTGTCAGCAGCGGTGCAGCTGGCTCATTCCCATATAGGGGGAGGCCAGAGCCAGGGGCCTGCCACAAGTTGGAAGGCTGGGGAAGGGGAGGCCAGCAGAGGTGTCCTGGCTGTGGGTGGCTCTGAGGGGGCTCTCAGGGGTGGGGCTAAATCTCAGGGGCAGGATTATGTAAATCAAACCAATTCTAGCCACAGATTTAAAGTTTGGAAAAAAAAAAAAACCCAGCCTGGCGGAAAGAATTTAAATTATAAAAACTTAGAAGTATGGAATGTGAAATCATCCTGTAGGTGCTTATTTAACAACGAAATCATCCCGACACAATGAGCCATATGTGAAAAGTCATCCTTCCCCAACACATCCCCCAACAGGCACTCCTCAAGCCTCTCCCACCCAAGTGCTGGCATCCTCCCTGTCCTGCTTCACCTGAGACACCCCTTGTCTCATTAGACATGCAACTACGGGAGGGGTGACAGGAAGACAAGACACTATTTCCTCAGGCCCAGTTTGGTGTGGGGAGAAAGCCTCCTGATCCTGAAAGCAAGAATTTGACCAGAGCAGAAGTAATCAGTATGCAGATTGATTCTGTGGTATGTTAATGTTTATGCATAGATTATGAGGACCAGGTGAAAAGTGGGCCAGGGGAGCCAGATGTGTGTGTGAGTCATGGGTGGCTGAGATGAGGACAGGAGGGAAACTGGTTTGGAGGGTGCTGGCGATGGGGTGGGGGTGCCAGGAGGAAGGGAGGCTAGTTGTTTGAATGTCTGCATGAAAAAGCGGACGACAGCGGGGTCTGGGTGAATTCGGGCAACCATTTGGACCGTGGAGAAAACTGCCTGCGTGCGGCTGAGGACCTGCACTATTAATTTGTTTTTTAGCTAAGGCAAAGATAAATATAAAAACTGATACTCCACCCAGTTACCAGAAAACATTTAGGTATGTGTGAGACAACTTGGGTATGTGAACCTACCTTTTCAATGTAAATTCAGTGAAATCTAAGTGCAGATCCCATATTTCCAATAAAAAGGTAACATCCAAACTCAGATGTCCTATGAGTATAAAATACACAAAGATCTTCTGGACTTAGTATGAAAAGGGATTTTTTTTTTGTCAGGTACCTCACTAGTTATTTTTAAAATAGGATTGCATGTTGAAATGATAATCTTTTGGATATATTGGGTTAAATAAATTTATTATTAAAGTTAATTTCACTTAAAAATGTTTAATGTAGCTACTAGAAATTTTAAAATTAAGCATGTTGCTCACCTTATGTTTCTATTGGACGGCTCTCTCTAGATACAAAGGCTGCCAAGAGGGACCTCACTCTAGCTTCAGGGAGAAGAGAGGAATTAGCAAGGCCAAGCAGAGGCTCCTGAGGGCAGGGCCAAGGGCGGCTTGGTGGGGTGGGGATGGGATGCACAGAGATAACTCCAACCCTTAAGAAGGTGTTTCCTAGAGCAGGCTGTGACCTGTCAGTTTATATACTGAGGCTTAGGAGCCTCTTGGATGCCCCCAGATCTGCACCCCTGAATTGCCCTGTGCCCCTGCCGTCTTTGTTCCTGTGCTGGCATAGTGGTCTCACCTCCGGCAGTATCACCACCACTGGGCACAAGCTTCTCCAGCACAGCAACTGTGTCTTATTTCTCCTTGTACTCCCAGTGTTCACACCATGCTGCACTCACAGAAGACTCTTCGTTGATATTTTGTGGACAGAGAGAATGCCTGTGAGAGTGGGCTGAAGTGTGCGTTGGGCTCCAGAGACCTTAAGGAGGGGAGACCAGGTCCTGAGTAAAGTTGAAGGGGAGGGGCTGAGTCCTGCTAGCCAGGAGTCTCATCCCCTGGGGAAGTTCC
GCCCACAAGAGACCTCTGCCTGAGAACGTGGGTTTCAGCCTAAGAGTTGTAATATGTGTGCCCATTCACAGGTGCTGCATCAGAGTCCCAGGTGGGAAGAAGGCAAGCATACACAAAAATGGTAAAAGGCAGAAAGGAGCCCAGTCTCGTTCTTTTTAAGAAGTTTTCCTAAGAATCTCCACCCAGCGACTTGCTCTCACATCTTCTTGGCCAGCACTGGACCACACAACTCCTTCTAGATACAGAGGAGTCCTAGGATTCTATGAGAAAGAAGGGGAGGGTGGGCAAAGGGCAGCCAGCTGTGCAGCATCTGCTGGAGACACCTAACCCTTGGTGGAGGGGTTGTGGTGCTGGGAGAAGGCTTTCTGGACGGTGTGACAGCAGAGATAAACTTAAAGGCCAAGTAGGAGTTACCCTGGTGAAGCAGGGCAGGGTTACAAGCATTCCAGCAACATGAAGCAGCAGGAGTGTTTTAATTAAAAGAAGGCAGTTGCTGTAACCAACTATAAACAAATAAAGGCTTAAACACAATGGAAGTTTATTTCTCACTAAGGGAACATCCAAATCCATGATACTTTAAGTCAGGGACCCAGGTTCCTCCCATCTATGGTTCTGCCATCACTAATCTGGGTCTTCCACAATTGCCGTGCTCCTTGGAGGTGGGAAGAGCAGGCGGAGGACACGTGGGAGGTTTTAGGGACAAGCCTGGAGGCAGCATGCGTCACTCCCATGCAGAGTCCATTGGCCAATGCTGGCTCCGATGGCCACATCTCACTGCAGGGGCAGCTGGGAAATACAGTCTGGCTGTCTACCCAGGAGGAAGAGCAGCCAGTTTCTGCTGCTGATGATCAGGAGGTGGAGAAAATGTTCAGTCAGGCAGGGAGTGGGAATAGACAAGACCACAAGCAGCTTGGTGCCTCTGAAAGGGAGAGGGGTGGAGGGGAGACTAGAGAGGTGGGTAGGAATACTGGATTCCACTGACCACGTGCTGGATGTCACGCTTAGCCCTCCTGCTCTGTGCCGGGTTAGGCACCTGGTGTTTTACGTACATAATCTCAATTCTGTGAGGGCATCCGACCTGTGGGAAAAGAGCTGTTTGTTTCAAATGCCAGTCCTGCTTCCTAACAAGTGTTTAGAGCTTAATCGTGTTCAAAATACATATACAATGTTTAATACTTACAAGAATTTGGTGGGGAAAATATTACCATCTTTCCCTTTTGTGATTGGAGAAAAATGAGGCTTTGAAGGGTTTAAGAACTTGCCCAAGGTCGGCCAGGTGCAGTGGCTCATGTCTATAATCCCAACACTTTGGGAGGCTGAGGTGGGAGGATCGCTTGAGGCCAGGAGTTCAAGACCAGCCTGAGCAACATAGTGAGACTTTGTCTCTATAAAAAATAAATAAATAAATAAAAACAACTTGTCCAAGGTCAGACAGGCAGCCTCTTAGTAAGCACACATATCCTCTATATTATACTACCTCTCATGGAGGATCTCCTGTGTTCTACAAATAGTCTGGACTTGAGCCAGAATGTGTTATAATCCTGGGATCACGGCCAGTGGGCTTAGAAGAAGCCATCTCTTTCTCATGCCAAGATGAGGCTCCCCCAGATTTGCTCAGACTTACCTATAGTCAGCAGCATCGGGGGTCAGGAAAGACTTCACGAAGCCATAAATGCATCCTTCTCGGGGCAGCACCTGGCTCTCCCAGGTGAGAGAGGACTCCATTTTCACAGGCAGGCGTGGGAGCTTCAGCACCCATCTCTGGGCCCAGAATGACCCACTGGAGACCTTACAGCTCTCCTGTCACCCCCAATTCCTGCCCCCTCTGCAGCCTTGGAGGAGAATGGAGCTGAAGGGCCTGCCCTCTGTAGGGTGAGAAAGGGAGGCTAAAGCCTGGTGCCCACTGCCCTGGCTGCTCCGCATTGCAGGAGCTGCGCCCTTCCTTTCCTGGCACAGGGTCCACAGCCCCGAAACCCCGTTGTGTGGGAGCTGGGCACAGGGCAGCAGGACTAATCCTTGGAACAGCTCAGGGAGGATTATCCCAGCCACTGTCAGCAGCGGTGCAGCTGGCTCATTCCCATATAGGGGGAGGCCAGAGCCAGGGTGCCCTGGCTGCTCCGCATTGCAGGAGCTGCGCCCTTCCTTTCCTGGCACAGGGTCCACAGCCCCGAAACCCCGTTGTGTGGGAGCTGGGCACAGGGCAGCAGGACTAATCCTTGGAACAGCTCAGGGAGGATTATCCCAGCCACTGTCAGCAGCGGTGCAGCTGGCTCATTCCCATATAGGGGGAGGCCAGAGCCAGGGGCCTGCCACAAGTTGGAAGGCTGGGGAAGGGGAGGCCAGCAGAGGTGTCCTGGCTGTGGGTGGCTCTGAGGGGGCTCTCAGGGGTGGGGCTAAATCTCAGGGGCAGGATTATGTAAATCAAACCAATTCTAGCCACAGATTTAAAGTTTGGAAAAAAAAAAAAACCCAGCCTGGCGGAAAGAATTTAAATTATAAAAACTTAGAAGTATGGAATGTGAAATCATCCTGTAGGTGCTTATTTAACAACGAAATCATCCCGACACAATGAGCCATATGTGAAAAGTCATCCTTCCCCAACACATCCCCCAACAGGCACTCCTCAAGCCTCTCCCACCCAAGTGCTGGCATCCTCCCTGTCCTGCTTCACCTGAGACACCCCTTGTCTCATTAGACATGCAACTACGGGAGGGGTGACAGGAAGACAAGACACTATTTCCTCAGGCCCAGTTTGGTGTGGGGAGAAAGCCTCCTGATCCTGAAAGCAAGAATTTGACCAGAGCAGAAGTAATCAGTATGCAGATTGATTCTGTGGTATGTTAATGTTTATGCATAGATTATGAGGACCAGGTGAAAAGTGGGCCAGGGGAGCCAGATGTGTGTGTGAGTCATGGGTGGCTGAGATGAGGACAGGAGGGAAACTGGTTTGGAGGGTGCTGGCGATGGGGTGGGGGTGCCAGGAGGAAGGGAGGCTAGTTGTTTGAATGTCTGCATGAAAAAGCGGACGACAGCGGGGTCTGGGTGAATTCGGGCAACCATTTGGACCGTGGAGAAAACTGCCTGCGTGCGGCTGAGGACCTGCACTATTAATTTGTTTTTTAGCTAAGGCAAAGATAAATATAAAAACTGATACTCCACCCAGTTACCAGAAAACATTTAGGTATGTGTGAGACAACTTGGGTATGTGAACCTACCTTTTCAATGTAAATTCAGTGAAATCTAAGTGCAGATCCCATATTTCCAATAAAAAGGTAACATCCAAACTCAGATGTCCTATGAGTATAAAATACACAAAGATCTTCTGGACTTAGTATGAAAAGGGATTTTTTTTTTGTCAGGTACCTCACTAGTTATTTTTAAAATAGGATTGCATGTTGAAATGATAATCTTTTGGATATATTGGGTTAAATAAATTTATTATTAAAGTTAATTTCACTTAAAAATGTTTAATGTAGCTACTAGAAATTTTAAAATTAAGCATGTTGCTCACCTTATGTTTCTATTGGACGGCTCTCTCTAGATACAAAGGCTGCCAAGAGGGACCTCACTCTAGCTTCAGGGAGAAGAGAGGAATTAGCAAGGCCAAGCAGAGGCTCCTGAGGGCAGGGCCAAGGGCGGCTTGGTGGGGTGGGGATGGGATGCACAGAGATAACTCCAACCCTTAAGAAGGTGTTTCCTAGAGCAGGCTGTGACCTGTCAGTTTATATACTGAGGCTTAGGAGCCTCTTGGATGCCCCCAGATCTGCACCCCTGAATTGCCCTGTGCCCCTGCCGTCTTTGTTCCTGTGCTGGCATAGTGGTCTCACCTCCGGCAGTATCACCACCACTGGGCACAAGCTTCTCCAGCACAGCAACTGTGTCTTATTTCTCCTTGTACTCCCAGTGTTCACACCATGCTGCACTCACAGAAGACTCTTCGTTGATATTTTGTGGACAGAGAGAATGCCTGTGAGAGTGGGCTGAAGTGTGCGTTGGGCTCCAGAGACCTTAAGGAGGGGAGACCAGGTCCTGAGTAAAGTTGAAGGGGAGGGGCTGAGTCCTGCTAGCCAGGAGTCTCATCCCCTGGGGAAGTTCCTGCCCTGGCTGCTCCGCATTGCAGGAGCTGCGCCCTTCCTTTCCTGGCACAGGGTCCACAGCCCCGAAACCCCGTTGTGTGGGAGCTGGGCACAGGGCAGCAGGACTAATCCTTGGAACAGCTCAGGGAGGATTATCCCAGCCACTGTCAGCAGCGGTGCAGCTGGCTCATTCCCATATAGGGGGAGGCCAGAGCCAGGGGCCTGCCACAAGTTGGAAGGCTGGGGAAGGGGAGGCCAGCAGAGGTGTCCTGGCTGTGGGTGGCTCTGAGGGGGCTCTCAGGGGTGGGGCTAAATCTCAGGGGCAGGATTATGTAAATCAAACCAATTCTAGCCACAGATTTAAAGTTTGGAAAAAAAAAAAAACCCAGCCTGGCGGAAAGAATTTAAATTATAAAAACTTAGAAGTATGGAATGTGAAATCATCCTGTAGGTGCTTATTTAACAACGAAATCATCCCGACACAATGAGCCATATGTGAAAAGTCATCCTTCCCCAACACATCCCCCAACAGGCACTCCTCAAGCCTCTCCCACCCAAGTGCTGGCATCCTCCCTGTCCTGCTTCACCTGAGACACCCCTTGTCTCATTAGACATGCAACTACGGGAGGGGTGACAGGAAGACAAGACACTATTTCCTCAGGCCCAGTTTGGTGTGGGGAGAAAGCCTCCTGATCCTGAAAGCAAGAATTTGACCAGAGCAGAAGTAATCAGTATGCAGATTGATTCTGTGGTATGTTAATGTTTATGCATAGATTATGAGGACCAGGTGAAAAGTGGGCCAGGGGAGCCAGATGTGTGTGTGAGTCATGGGTGGCTGAGATGAGGACAGGAGGGAAACTGGTTTGGAGGGTGCTGGCGATGGGGTGGGGGTGCCAGGAGGAAGGGAGGCTAGTTGTTTGAATGTCTGCATGAAAAAGCGGACGACAGCGGGGTCTGGGTGAATTCGGGCAACCATTTGGACCGTGGAGAAAACTGCCTGCGTGCGGCTGAGGACCTGCACTATTAATTTGTTTTTTAGCTAAGGCAAAGATAAATATAAAAACTGATACTCCACCCAGTTACCAGAAAACATTTAGGTATGTGTGAGACAACTTGGGTATGTGAACCTACCTTTTCAATGTAAATTCAGTGAAATCTAAGTGCAGATCCCATATTTCCAATAAAAAGGTAACATCCAAACTCAGATGTCCTATGAGTATAAAATACACAAAGATCTTCTGGACTTAGTATGAAAAGGGATTTTTTTTTTGTCAGGTACCTCACTAGTTATTTTTAAAATAGGATTGCATGTTGAAATGATAATCTTTTGGATATATTGGGTTAAATAAATTTATTATTAAAGTTAATTTCACTTAAAAATGTTTAATGTAGCTACTAGAAATTTTAAAATTAAGCATGTTGCTCACCTTATGTTTCTATTGGACGGCTCTCTCTAGATACAAAGGCTGCCAAGAGGGACCTCACTCTAGCTTCAGGGAGAAGAGAGGAATTAGCAAGGCCAAGCAGAGGCTCCTGAGGGCAGGGCCAAGGGCGGCTTGGTGGGGTGGGGATGGGATGCACAGAGATAACTCCAACCCTTAAGAAGGTGTTTCCTAGAGCAGGCTGTGACCTGTCAGTTTATATACTGAGGCTTAGGAGCCTCTTGGATGCCCCCAGATCTGCACCCCTGAATTGCCCTGTGCCCCTGCCGTCTTTGTTCCTGTGCTGGCATAGTGGTCTCACCTCCGGCAGTATCACCACCACTGGGCACAAGCTTCTCCAGCACAGCAACTGTGTCTTATTTCTCCTTGTACTCCCAGTGTTCACACCATGCTGCACTCACAGAAGACTCTTCGTTGATATTTTGTGGACAGAGAGAATGCCTGTGAGAGTGGGCTGAAGTGTGCGTTGGGCTCCAGAGACCTTAAGGAGGGGAGACCAGGTCCTGAGTAAAGTTGAAGGGGAGGGGCTGAGTCCTGCTAGCCAGGAGTCTCATCCCCTGGGGAAGTTCCAGGGACCCCTCAGAAGTGCAAGGGGACGGTGTTAGTGTTAGTCCAGTAACACAGCCCAGAGCCTGCCTTCCACGTGGGTTTGACAGGAGCCTCCTAACTGCTCTTCTGCTTCCATTTTTGCCCCTTCAGTCTATTCTCAACAGGGAAGCCAGAGGCATCCTTAACCATGTCAGATCATGTGGCTCCTCAGCTCAAAGCCTCATCTCAGAGGAAAGCTCTGGTCCCTTAGAAATGGCCCAAGTGGTGACAGACAGACTCTAAGGTGAGCAGACTGTTGCTAGATATCTGGGCTCGGAGGACTCGCCACTGCTCAAAGGCAGTGAGGATTTTCGCACTAGAAGCTGGAGGACAGGGATCCTTGTTAGGTAGGAGCAGAAAGCTTAGAAAAGTGGTCTCCTGCAGTTACGTGGCAAACACATCATGTAAGTGATAAATTGGGTATGCAGTTGAGGAGATTTCCAAGTAAAATGTTGAGGATGCTGCCTGGTTTCTTCTTACTGCTTATAATATAGTGTGAGAGAAGAGAGATAAATTGAGAAAGAGACTGGTTTTTAAACTGTTAAAATTGAATCAGGACTTGATGATTTTGAAAATTGTCAGTCTCCCCACATGGAAAAAGATGCTGAAATTAACAAATGGCTTCTGAGCATGTGGCATAGGGTGTAACTGTACAGTCTTTTGTGATTATGCATAAAGATCAAAGGATGGGAGTAGCAATGAGTCACACAGAGGTCTGTTGCAAGAGATTACAAGGGTGTACCATGCAGAACCTCTCCACCAAACCTTAGGGCCCTTGGGAAGCTTCAGTGAGTTACCCTGGGGGCCATCTTGGCAGGAGCTGAAGGTAGAAAGGTAGAGTTTATCTCTAAAAGATTCATGGGTATGGCTCTTGACAAATCGACTATGAGCCCCACCGAAACCCACAGAGGACAGGCAAAGGGTTTGGGAAAGCTGTTTCACCCACAGTGCTGGCAGATTGGTCTGTAGGGGACAGAGTGCAAAATGAAAGAAGACTGTCAGAGACCCCAAACTCTGCTGTCAAGAAGAAGGCTGATAAAACTACTTGGCTGCAAACACGTGGATCTTTCGTGAGAAAAGAAGGATGACCCAGAGGCAGAAGCCCAGAAGGCAGAGCCAAGAGACATGGAATCTTCCCACATCTTAAAACCTGTTTAGGGAACACCAGCATCTGTCCAGCTGGATTTCAGAACCACCATTCCTTCATCCTTCCCCTGCTGCCTCTTTCTGAACAGCAATGTCTCAAGCTTTACCCACCATTGTGTGTTGCATATGTAGGGGGCAGATAGCTTGTATCTTTAGTTTTCCAGATCAGAGGAACATCCAAAGAAATCTGTTCTACACCTAAACCCGATTTAGATGAGATTCGGGACTGTGAGCATGAAGGGATCTCAAGAGGGGTGAATGTGTTTTGCATGCACAAGGGACAGGAGTCTTGGGGACAGAGGACAGGCTGTGGTGGCAGATACTAAGGTGACCCCCACAACCCCCACCTCTGCCATTCACACCCTTGAATAATCCCCTTCTCTGGTTGTAAGCAGAACCTGTGGCTTGCTTATGAAGGAGGCGGTATATATGTGATTCATGTACTGATCATATTGTATAAGATCACTGGCTGGATGCAGTGGCTCGTGCCTGTAATCCCAACACTTTGGGAGGCTGAGGCGGGTGGATCACCTGAGGTCAGGAGTTCGAGACCAGGCTGGCCAACATGGCAAAACCCCGCCTCTACTAAAAATACAAAAATTAGCCAGGCATAGTGGTGCACGCCTGTAATCACAGCTACTCAAGAGGCTGAAGCAGGAGAATTGCTTGAACTCAGGAGGTGGAGGTGGCAGTGAGCCAAGATCGTGCCACTGCACTCCAGCCTCAGTGACAGAGCGAGACTCTGTCTCAAAAAATAAATAAATAAAATGTTAAGATCATAACCTGTCTTTCTGGGGACTCTCTCTTGACGCCTTTGAAGAAGCAGGCTGCCATGTTGCAAGCTGCCTCATGGAGGGGATCAGCTGCGAGGAGCTAAGAGCCCCCTCCAGTCGATGCTCACCAGGAAGCTGAGGTCTTGTGTCCAGCACCCTGCATAGAA"""

k_value = 10
num_merges = 1000

initial_vocab = list(set(''.join(corpus)))
print(initial_vocab)
tokenizer = KMerTokenizer(initial_vocab=initial_vocab)
tokenizer.train_tokenizer(corpus, k_value, num_merges)

print(tokenizer.vocab)

test= """CATGAATTCAATATTTCAGGGCAAACTAACTGAATGTTAGAACCAACTCCTGATAAGTCTTGAACAAAAGATAGGA"""

encoded_sequence = tokenizer.encode_sequence(test)
print("Encoded sequence:", encoded_sequence)

decoded_sequence = tokenizer.decode_sequence(encoded_sequence)
print("Decoded sequence:", decoded_sequence)
print(test == decoded_sequence)